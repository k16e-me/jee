---
import ButtonLink from '@atoms/ButtonLink.astro'
import Icon from '@atoms/Icon.astro'
import InputCheck from '@atoms/InputCheck.astro'
import InputText from '@atoms/InputText.astro'
import Text from '@atoms/Text.astro'
import HeadingSection from '@blocks/HeadingSection.astro'
import HeadingStretch from '@blocks/HeadingStretch.astro'
import { _getNewsletter } from '@scripts/collections/get-newsletter'
import _slugify from '@scripts/slugify'
import { useStoryblokApi } from '@storyblok/astro'
import { _getCategories } from '@scripts/collections/get-categories'

const api = useStoryblokApi()
const {
	formId,
	formAction,
	modal,
	headingType = 'stretch',
	class: classes,
	...props
} = Astro.props
const newsletterData = await _getNewsletter()
const categories = await _getCategories()
const newsletter = newsletterData.data.story.content.global[0]
const title = newsletter.title
const id = formId ?? newsletter.component
const success = newsletter.success_message
const error = newsletter.error_message
const source = newsletter.message_source
const topics = categories.data.stories
---

<div class:list={['space-y-6', classes]} data-newsletter {...props}>
	{
		headingType === 'stretch' ? (
			<HeadingStretch tag='h3' text={title} />
		) : (
			<HeadingSection text={title} level='h2' size='5' padding='small' />
		)
	}
	<div
		class='border-y-2 border-[var(--color-border-muted)] py-5 ml:py-6 hidden form-submitted'>
		<div class='space-y-4 on-success -translate-y-4 opacity-0'>
			<Text
				tag='p'
				text={success}
				size='1hx'
				family='display'
				weight='semi'
				color='caption'
			/>
			<Text
				tag='p'
				text={`~ ${source}`}
				size='copy'
				family='display'
				weight='medium'
				color='caption'
			/>
		</div>
		<div class='on-error -translate-y-4 opacity-0'>
			<Text
				tag='p'
				text={error}
				size='1hx'
				family='display'
				weight='semi'
				color='caption'
			/>
		</div>
	</div>
	<form
		id={id}
		form-id='fM7qnZ5XF'
		data-form-success={success}
		data-form-error={error}
		data-message-source={source}>
		<div class='grid grid-cols-1 md:grid-cols-2 gap-x-3 gap-y-5'>
			<InputText
				label='Name'
				id={modal ? 'modal-name' : 'name'}
				name={modal ? 'Name (Modal)' : 'Name'}
				placeholder='Your Full Name'
				required
				useShadow
				hideLabel={false}
				class='w-full md:col-span-1'
			/>
			<InputText
				label='Email'
				id={modal ? 'modal-email' : 'email'}
				name={modal ? 'Email (Modal)' : 'Email'}
				placeholder='Email Address'
				required
				useShadow
				hideLabel={false}
				class='w-full md:col-span-1'
			/>
			<InputText
				label='Organization'
				id={modal ? 'modal-org' : 'org'}
				name={modal ? 'Organization (Modal)' : 'Organization'}
				placeholder='Your Organization'
				required
				useShadow
				hideLabel={false}
				class='w-full md:col-span-2'
			/>
			<div class='col-span-full space-y-3 my-4'>
				<HeadingSection
					text={'Topics of Interest'}
					level='h4'
					size='6'
					padding='small'
				/>
				{
					topics.map((i) => (
						<InputCheck
							label={i.content.title}
							id={
								modal
									? `modal-${_slugify(i.content.title)}`
									: _slugify(i.content.title)
							}
							name={i.content.title}
							checked
						/>
					))
				}
			</div>
			<ButtonLink
				tag='button'
				label='Subscribe'
				type='submit'
				iconRight
				icon='paper-plane'
				data-form-submit
			/>
		</div>
	</form>
</div>
