---
import Head from '@layouts/Head.astro'
import Header from '@layouts/Header.astro'
import Footer from '@layouts/Footer.astro'
import TitleHidden from '@blocks/TitleHidden.astro'
import {
	_addSettings,
	_addAwards,
	_addPeople,
	_addDesignations,
	_addOffices,
	_addSectors,
	_addPractices,
	_addAfricaExpertise,
	_addInsights,
	_addCategories,
	_addEvents,
	_addNewsletter,
	_settings,
} from '@scripts/store'
import Shim from '@blocks/Shim.astro'
import Modal from '@blocks/Modal.astro'
import ModalNewsletter from '@blocks/ModalNewsletter.astro'
import _startsWith from '@scripts/starts-with'
import Drapery from '@blocks/Drapery.astro'
import NavMobile from '@blocks/NavMobile.astro'
import { _getAllAPIs } from '@scripts/api'
import Drawer from '@blocks/Drawer.astro'
import Locations from '@blocks/Locations.astro'

const { pageTitle, pageDescription, pageThumbnail } = Astro.props

let fixHeader = true,
	currPath = Astro.url.pathname,
	unfixHeader = ['about', 'people', 'insights', 'events']

if (currPath == '/')
	currPath = currPath.replace(/^\//, 'home').replace(/\.html$/, '')
else currPath = currPath.replace(/^\//, '').replace(/\.html$/, '')

_startsWith(currPath, unfixHeader) ? (fixHeader = false) : (fixHeader = true)

const apis = _getAllAPIs(),
	results = await Promise.all(apis.map((fn) => fn())),
	[
		settings,
		awards,
		designations,
		categories,
		offices,
		people,
		sectors,
		practices,
		africaExpertise,
		insights,
		events,
		newsletter,
	] = results

_addAwards(awards.data.stories)
_addPeople(people.data.stories)
_addDesignations(designations.data.stories)
_addOffices(offices.data.stories)
_addSectors(sectors.data.stories)
_addPractices(practices.data.stories)
_addAfricaExpertise(africaExpertise.data.stories)
_addInsights(insights.data.stories)
_addCategories(categories.data.stories)
_addEvents(events.data.stories)
_addNewsletter(newsletter.data.story.content)
_addSettings(settings.data.story.content)

const siteData = _settings.value
---

<!doctype html>
<html lang='en' class='scroll-smooth bg-[var(--color-bg-default)]'>
	<Head
		title={`${pageTitle} | ${siteData.title}`}
		description={pageDescription || siteData.description}
		image={pageThumbnail || '/thumbnail.png'}
	/>
	<body
		class='max-w-screen-3xl mx-auto flex flex-col min-h-screen overflow-x-hidden'>
		<TitleHidden tag='h1' title={pageTitle} id='title-hidden' />
		<Header
			nav={siteData.nav}
			tools={siteData.tools}
			class:list={[fixHeader && 'fixed inset-x-0 top-0']}
			id='header'
		/>
		<main
			class:list={[
				'mb-auto swup-in',
				fixHeader &&
					'pt-[var(--spacing-1)] md:pt-[var(--spacing-2)] lg:pt-[var(--spacing-3)]',
			]}
			id='swup'>
			<slot />
		</main>
		<Footer site={siteData} id='footer' />
		<Drapery data-drapery id='drapery'>
			<NavMobile />
		</Drapery>
		<Modal data-modal>
			<ModalNewsletter data-modal-display='newsletter' />
		</Modal>
		<Drawer data-drawer>
			<Locations data-drawer-display='locations' />
		</Drawer>
		<Shim data-shim />
		<script src='@scripts/global.js'></script>
	</body>
</html>
