---
import Section from '@layouts/Section.astro'
import Wrapper from '@layouts/Wrapper.astro'
import Grid from '@layouts/Grid.astro'
import HeadingSection from '@blocks/HeadingSection.astro'
import { _odd, _xPadding } from '@scripts/snips'
import { _odd, _spaceY } from '@scripts/snips'
import CardInsight from '@blocks/CardInsight.astro'
import _slugify from '@scripts/slugify'

const {
		blok,
        bleed,
		altComponent,
		altOverlap,
		altHeading,
		altLabel,
		altLink,
		altInsights,
		altCollection,
        isCollection = true,
        controls,
		class: classes,
		...props
	} = Astro.props,
	insights = altInsights ? altInsights : blok.insights,
	collection = altCollection ? altCollection : blok.collection[0]
---

<Section
	component={altComponent ? altComponent : blok.component}
	overlap={altOverlap ? altHeading : blok.overlap}
	id={altHeading ? _slugify(altHeading) : _slugify(blok.heading)}>
	<Wrapper margins={false}>
		<Grid>
			<div class:list={['col-span-full', _spaceY()]}>
				<div
					class:list={[
						(bleed || blok.bleed)
							? _xPadding('both-lgdown-l')
							: _xPadding('both'),
					]}>
					<HeadingSection
						level='h2'
						text={altHeading ? altHeading : blok.heading}
						size='4'
						isFromCollection={isCollection}
                        hasCarouselControls={controls}
						label={altLabel ? altLabel : collection.label}
						link={altLink ? altLink : collection.link}
					/>
				</div>
				<div
					class:list={[
						(bleed || blok.bleed)
							? _xPadding('left-lgdown-l')
							: _xPadding('left'),
					]}>
					<div class:list={['swiper swiper-all']}>
						<ul class='swiper-wrapper'>
							{
								insights.map((item, idx) => (
									<li class='swiper-slide !w-[20rem] !h-[24.5rem] group relative overflow-clip rounded-tl-[1.5rem] rounded-tr-[2rem]'>
										<CardInsight piece={item} />
									</li>
								))
							}
						</ul>
					</div>
				</div>
			</div>
		</Grid>
	</Wrapper>
</Section>
