---
import Section from '@layouts/Section.astro'
import Wrapper from '@layouts/Wrapper.astro'
import Grid from '@layouts/Grid.astro'
import { _xPadding, _sectionPadding } from '@scripts/snips'
import { _fontSize } from '@scripts/font-size'
import _slugify from '@scripts/slugify'
import CardInsight from '@blocks/CardInsight.astro'
import InputText from '@atoms/InputText.astro'
import ButtonFab from '@atoms/ButtonFab.astro'
import FiltersInsights from '@blocks/FiltersInsights.astro'
import { MAXITEMS } from '@scripts/constants'
import Pagination from '@blocks/Pagination.astro'
import { _getVisibleItems } from '@scripts/get-visible-items'
import NoResult from '@blocks/NoResult.astro'
import { _getInsights } from '@scripts/collections/get-insights'
import ButtonMore from '@atoms/ButtonMore.astro'
import { _getCategories } from '@scripts/collections/get-categories'
import { _getSectors } from '@scripts/collections/get-sectors'
import { _getPractices } from '@scripts/collections/get-practices'

const { blok } = Astro.props
const insights = await _getInsights()
const categoriesData = await _getCategories()
const categories = categoriesData.data.stories.map((i) => i.content.title)
const sectorsData = await _getSectors()
const sectors = sectorsData.data.stories.map((i) => i.content.title)
const practicesData = await _getPractices()
const practices = practicesData.data.stories.map((i) => i.content.title)
const authors = insights
	.map((i) => i.content.author)
	.flat()
	.map((i) => i.name)
const uniqueAuthors = [...new Set(authors)]
const maxItems = MAXITEMS

const page = Astro.url.searchParams.get('page') || '1'
const search = Astro.url.searchParams.get('s')
const current = parseInt(page, 10)
const allCategories = {
	page: 'Insights',
	categories: Astro.url.searchParams.getAll('categories[]') || [],
	expertise: Astro.url.searchParams.getAll('expertise[]') || [],
	people: Astro.url.searchParams.getAll('people[]') || [],
}
const { searchResultsItems, visibleItems } = _getVisibleItems(
	insights,
	search,
	current,
	maxItems,
	allCategories,
)
---

<Section
	component={blok.component}
	title={blok.title}
	overlap
	class='r-hide-overflow overflow-y-clip z-20'>
	<Wrapper
		margins={false}
		class:list={[
			'overflow-clip bg-[var(--color-bg-default)] ml:bg-transparent rounded-t-[1.5rem] md:rounded-t-[3.5rem] ml:rounded-t-none',
		]}>
		<Grid class='items-start'>
			<div
				class:list={[
					'col-span-full ml:[grid-area:1/1/2/3] lg:[grid-area:1/1/2/4] sticky bg-[var(--color-bg-default)] z-10 -top-px [&.is-pinned]:shadow ml:!shadow-none ml:pt-8 ml:max-h-[calc(100vh-1.5rem)] overflow-y-clip flex flex-col px-4 md:px-8 ml:pr-0 lg:pl-16',
				]}
				data-pin-top>
				<form
					class='space-y-1.5 min-h-0 relative overflow-auto'
					data-search-filter>
					<ButtonMore
						tag='button'
						type='submit'
						label='View Results'
						class='hidden ml-auto mb-4'
					/>
					<div
						class='flex items-center justify-between py-3 ml:!pb-0 gap-3'>
						<InputText
							isSearch
							label='Search'
							value={search}
							id='text'
							name='s'
							placeholder='Search JEE Insights'
							class='w-full local-search'
						/>
						<!-- <ButtonFab
							icon='funnel'
							label='Toggle Page Sorting & Filtering'
							class='lg:sr-only flex-shrink-0'
							type='button'
						/> -->
					</div>
					<FiltersInsights
						categories={categories}
						sectors={sectors}
						practices={practices}
						people={uniqueAuthors}
						selectedItems={allCategories}
						class='hidden ml:flex ml:flex-col'
					/>
				</form>
			</div>
			<div
				class:list={[
					'col-span-full ml:[grid-area:1/3/2/13] lg:[grid-area:1/4/2/13] grid grid-cols-1 gap-y-6 md:gap-y-8 px-4 md:px-8 ml:pl-0 lg:pr-16',
				]}>
				{
					visibleItems.length > 0 ? (
						visibleItems.map((i, x) => (
							<CardInsight piece={i} landscape profile={false} />
						))
					) : (
						<NoResult />
					)
				}
				<Pagination
					total={searchResultsItems.length}
					size={maxItems}
					current={current}
				/>
			</div>
		</Grid>
	</Wrapper>
</Section>
