---
import SectionSpy from '@blocks/SectionSpy.astro'
import HeaderPerson from '@composites/headers/HeaderPerson.astro'
import SectionStack from '@composites/sections/SectionStack.astro'
import Grid from '@layouts/Grid.astro'
import Section from '@layouts/Section.astro'
import Wrapper from '@layouts/Wrapper.astro'
import { _sectionPadding, _xPadding } from '@scripts/snips'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import SectionMinicards from '@composites/sections/SectionMinicards.astro'
import RegisterItem from '@blocks/RegisterItem.astro'
import Register from '@blocks/Register.astro'
import { _insights, _people } from '@scripts/store'
import _empty from '@scripts/empty'
import CarouselPeople from '@composites/sections/CarouselPeople.astro'
import SectionLatest from '@composites/sections/SectionLatest.astro'

const { blok } = Astro.props
const { slug } = Astro.params
const personName = blok.name
const personSlug = slug.split('/')[1]
const bylineRank = blok.byline[0].content.rank
const relatedPeople = _people.value
	.filter((i) => i.content.byline[0].content.rank === bylineRank)
	.filter((i) => i.name !== personName)
	.slice(0, 7)
const headings = [
	blok.bio[0].heading[0].heading,
	blok.sectors[0].heading[0].heading,
	blok.practices[0].heading[0].heading,
	...blok.registers.map((i) => i.title),
]
const personInsights = _insights.value
	.filter((i) => i.content.author.some((j) => j.slug === personSlug))
	.slice(0, 7)

!_empty(relatedPeople) && headings.push('Related People')
!_empty(personInsights) && headings.push('Insights')
---

<HeaderPerson person={blok} />
<Section
	tag='div'
	component={'person-details'}
	overlap
	spy
	class='r-hide-overflow overflow-y-clip z-20 bg-[var(--color-bg-default)]'>
	<Wrapper margins={false} class:list={['overflow-x-clip']}>
		<Grid>
			<div
				class:list={[
					'col-span-full md:[grid-area:1/1/1/3] lg:[grid-area:1/1/1/4] self-start sticky bg-[var(--color-bg-default)] z-10 -top-px [&.is-pinned]:shadow md:!shadow-none overflow-auto',
					_xPadding('both-lgdown'),
					_sectionPadding('top-md-up'),
				]}
				data-pin-top>
				<SectionSpy
					headings={headings}
					breakAt='md'
					data-spy-sections
				/>
			</div>
			<div
				class:list={[
					'col-span-full md:[grid-area:1/3/2/9] lg:[grid-area:1/5/2/13]',
				]}>
				<SectionStack
					blok={blok.bio[0]}
					showLess
					xPadding={false}
					class:list={[
						_xPadding('both-mddown-lg-l'),
						'lg:max-w-[48rem]',
					]}
				/>
				<SectionMinicards
					blok={blok.sectors[0]}
					list={blok.sectors[0].collection}
					xPadding={false}
					overlap
					class:list={[
						_xPadding('both-mddown-lg-l'),
						'lg:max-w-[48rem]',
					]}
				/>
				<SectionMinicards
					blok={blok.practices[0]}
					list={blok.practices[0].collection}
					xPadding={false}
					overlap
					class:list={[
						_xPadding('both-mddown-lg-l'),
						'lg:max-w-[48rem]',
					]}
				/>
				{
					blok.registers.map((i) => (
						<Register
							entry={i}
							overlap
							xPadding={false}
							class:list={[
								_xPadding('both-mddown-lg-l'),
								'lg:max-w-[48rem]',
							]}
						/>
					))
				}
				{
					!_empty(relatedPeople) && (
						<CarouselPeople
							altHeading='Related People'
							altComponent='related-people'
							altOverlap={true}
							altLabel='All People'
							altLink='/people'
							altPeople={relatedPeople}
							isFromCollection
							altCollection={relatedPeople}
						/>
					)
				}
				{
					!_empty(personInsights) && (
						<SectionLatest
							altComponent='insights'
							altHeading='Insights'
							altOverlap={true}
							altLabel='All Insights'
							altLink='/insights'
							altInsights={personInsights}
							isFromCollection
							altCollection={personInsights}
						/>
					)
				}
			</div>
		</Grid>
	</Wrapper>
</Section>
