---
import { useStoryblokApi } from '@storyblok/astro'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import Base from '@layouts/Base.astro'
import {
	_addSettings,
	_addAwards,
	_addPeople,
	_addInsights,
	_addEvents,
	_addDesignations,
	_addOffices,
	_addOpenings,
	_addSectors,
	_addPractices,
	_addAfricaExpertise,
	_addAfricaIp,
	_africaIp,
	_addCategories,
	_addNewsletter,
	_addRegions,
	_settings,
    _insights
} from '@scripts/store'
import { _getAllAPIs } from '@scripts/api'
import _getSSRRoutes from '@scripts/ssr-routes'
import { _getPageData } from '@scripts/storyblok'
import { _setAllStores } from '@scripts/set-stores'

export async function getStaticPaths() {
	const storyblokApi = useStoryblokApi()
	const ssrRoutes = _getSSRRoutes()

	let links = await storyblokApi.getAll('cdn/links', {
		version: 'published',
	})
	links = Object.values(links).filter(
		(link) =>
			!(link.slug === 'settings') &&
			!(link.slug === 'legal') &&
			!link.slug.startsWith('global') &&
			!link.slug.startsWith('awards') &&
			!link.slug.startsWith('designations') &&
			!link.slug.startsWith('profiles') &&
			!link.slug.startsWith('category') &&
			!link.slug.startsWith('successes') &&
			!link.slug.startsWith('offices') &&
			!link.slug.startsWith('regions') &&
			!link.slug.startsWith('openings') &&
			!ssrRoutes.includes(link.slug),
	)

	return links
		.filter((link) => !link.is_folder)
		.map((link) => {
			const slug = link.slug === 'home' ? undefined : link.slug
			return {
				params: { slug },
			}
		})
}

const { slug } = Astro.params
const { page, content, seo } = await _getPageData(slug)

_setAllStores()
---

<Base
	pageTitle={seo.title}
	pageDescription={seo.description}
	pageThumbnail={seo.thumbnail.filename}>
	<StoryblokComponent blok={content} />
</Base>
