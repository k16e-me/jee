---
import { useStoryblokApi } from '@storyblok/astro'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import Base from '@layouts/Base.astro'
import {
	_addSettings,
	_addAwards,
	_addPeople,
	_addDesignations,
	_addOffices,
	_addSectors,
	_addPractices,
	_addAfricaExpertise,
	_addAfricaIp,
	_africaIp,
	_addInsights, 
	_addCategories,
	_addEvents,
	_addNewsletter,
	_addRegions,
	_settings,
} from '@scripts/store'
import { _getAllAPIs } from '@scripts/api'

export async function getStaticPaths() {
	const storyblokApi = useStoryblokApi()

	let links = await storyblokApi.getAll('cdn/links', {
		version: import.meta.env.DEV ? 'draft' : 'published',
	})
	links = Object.values(links).filter(
		(link) =>
			!(link.slug === 'settings') &&
			!link.slug.startsWith('global') &&
			!link.slug.startsWith('awards') &&
			!link.slug.startsWith('designations') &&
			!link.slug.startsWith('profiles') &&
			!link.slug.startsWith('category') &&
			!link.slug.startsWith('successes') &&
			!link.slug.startsWith('offices') &&
			!link.slug.startsWith('regions') &&
			!link.slug.startsWith('legal'),
	)

	return links
		.filter((link) => !link.is_folder)
		.map((link) => {
			return {
				params: { slug: link.slug === 'home' ? undefined : link.slug },
			}
		})
}

const { slug } = Astro.params,
	storyblokApi = useStoryblokApi(),
	{ data } = await storyblokApi.get(
		`cdn/stories/${slug === undefined ? 'home' : slug}`,
		{
			version: import.meta.env.DEV ? 'draft' : 'published',
			resolve_links: 'url',
			resolve_relations: [
				'block_bento_plaques.plaques',
				'image_hanging_insight.insight',
				'carousel_people.people',
				'person.byline',
				'person_links.location',
				'collection.collection',
				'section_latest.insights',
				'insight.category',
				'insight.author',
				'insight.expertise',
				'insight.suggested',
				'session.host',
				'panelist.person',
				'chairpersons.persons',
				'practice.contacts',
				'section_successes.list',
				'office.contacts',
			],
		},
	),
	page = data.story,
	content = page.content,
	seo = content.seo[0]

const apis = _getAllAPIs(),
	results = await Promise.all(apis.map((fn) => fn())),
	[
		settings,
		awards,
		designations,
		categories,
		offices,
		people,
		sectors,
		practices,
		africaExpertise,
		africaIp,
		insights,
		events,
		newsletter,
		regions,
	] = results

_addAwards(awards.data.stories)
_addPeople(people.data.stories)
_addDesignations(designations.data.stories)
_addOffices(offices.data.stories)
_addSectors(sectors.data.stories)
_addPractices(practices.data.stories)
_addAfricaExpertise(africaExpertise.data.stories)
_addAfricaIp(africaIp.data.stories)
_addInsights(insights.data.stories)
_addCategories(categories.data.stories)
_addEvents(events.data.stories)
_addNewsletter(newsletter.data.story.content)
_addRegions(regions.data.stories)
_addSettings(settings.data.story.content)
---

<Base
	pageTitle={seo.title}
	pageDescription={seo.description}
	pageThumbnail={seo.thumbnail.filename}>
	<StoryblokComponent blok={content} />
</Base>
